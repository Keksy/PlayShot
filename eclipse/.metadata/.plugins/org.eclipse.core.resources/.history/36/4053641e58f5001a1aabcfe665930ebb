package de.devjava.playshot.addon.listener.labymod;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.UUID;
import java.util.Map.Entry;

import com.mojang.authlib.GameProfile;
import morph.common.Morph;
import morph.common.core.ObfHelper;
import morph.common.morph.mod.NBTStripper;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.entity.EntityList;
import net.minecraft.entity.EntityLiving;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.world.World;
import cpw.mods.fml.common.ObfuscationReflectionHelper;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.world.WorldServer;
import net.minecraftforge.common.util.FakePlayer;

public class MorphState 
	implements Comparable
{
	public final int NBT_PROTOCOL = 1;
	
	public String playerName;
	public String playerMorph;
	public boolean isFavourite;
	public boolean isRemote;
	
	public EntityLivingBase entInstance;
	
	public String identifier;
	
	public MorphState(World world, String name, String player, NBTTagCompound tag, boolean remote)
	{
		playerName = name;
		playerMorph = player;
		isFavourite = name.equalsIgnoreCase(player);
		isRemote = remote;
		
		if(!player.equalsIgnoreCase(""))
		{
			entInstance = new FakePlayer((WorldServer)world, new GameProfile(UUID.randomUUID()	, name));
		}
		else if(tag != null)
		{
			entInstance = (EntityLivingBase)EntityList.createEntityFromNBT(tag, world);
		}
		
		if(entInstance != null)
		{
			NBTTagCompound fakeTag = new NBTTagCompound();
			entInstance.writeEntityToNBT(fakeTag);
			if(playerMorph.equalsIgnoreCase(""))
			{
				identifier = entInstance.getClass().toString() + entInstance.getCommandSenderEntity().getName() + parseTag(fakeTag);
			}
			else
			{
				identifier = "playerMorphState::player_" + playerMorph;
			}
		}
	}

	



	

	@Override
	public int compareTo(Object arg0) 
	{
		if(arg0 instanceof MorphState)
		{
			MorphState state = (MorphState)arg0;
			return identifier.compareTo(state.identifier);
		}
		return 0;
	}
}