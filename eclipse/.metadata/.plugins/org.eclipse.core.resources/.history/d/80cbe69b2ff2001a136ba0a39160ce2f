package com.example.examplemod;

import java.util.List;

import org.lwjgl.opengl.GL11;

import net.labymod.api.LabyModAddon;
import net.labymod.settings.elements.SettingsElement;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.WorldRenderer;
import net.minecraft.client.renderer.entity.RendererLivingEntity;
import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraftforge.client.event.RenderPlayerEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class ExampleMod extends LabyModAddon {

	@Override
	protected void fillSettings(List<SettingsElement> arg0) {

	}

	@Override
	public void loadConfig() {

	}

	@Override
	public void onEnable() {

		this.getApi().registerForgeListener(this);

	}

	@SubscribeEvent
	public void render(RenderPlayerEvent.Pre event) {
		double offset = 0.3D;

		if (!event.entity.isSneaking())
			renderName((RendererLivingEntity) event.renderer, "Test", event.entityPlayer, event.x, event.y + offset,event.z);

	}

	public void renderName(RendererLivingEntity renderer, String str, EntityPlayer entityIn, double x, double y,
			double z) {
		FontRenderer fontrenderer = renderer.getFontRendererFromRenderManager();
		float f = 1.6F;
		float f3 = 0.019866668F;
		GlStateManager.pushMatrix();
		GlStateManager.translate((float) x + 0.0F, (float) y + entityIn.height + 0.5F, (float) z);
		GL11.glNormal3f(0.0F, 1.0F, 0.0F);
		GlStateManager.rotate(-(renderer.getRenderManager()).playerViewY, 0.0F, 1.0F, 0.0F);
		GlStateManager.rotate((renderer.getRenderManager()).playerViewX, 1.0F, 0.0F, 0.0F);
		GlStateManager.scale(-f3, -f3, f3);
		GlStateManager.disableLighting();
		GlStateManager.depthMask(false);
		GlStateManager.disableDepth();
		GlStateManager.enableBlend();
		GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
		Tessellator tessellator = Tessellator.getInstance();
		WorldRenderer worldrenderer = tessellator.getWorldRenderer();
		int i = 4;
		int j = fontrenderer.getStringWidth(str) / 2;
		GlStateManager.disableTexture2D();
		worldrenderer.begin(7, DefaultVertexFormats.POSITION_COLOR);
		worldrenderer.pos((-j - 1), (-1 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
		worldrenderer.pos((-j - 1), (8 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
		worldrenderer.pos((j + 1), (8 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
		worldrenderer.pos((j + 1), (-1 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
		tessellator.draw();
		GlStateManager.enableTexture2D();
		fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, i, 553648127);
		GlStateManager.enableDepth();
		GlStateManager.depthMask(true);
		fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, i, 1);
		GlStateManager.enableLighting();
		GlStateManager.disableBlend();
		GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
		GlStateManager.popMatrix();

	}
}
